name: Create Monthly ECCO Release

# run both every month on the 3rd and also
# via the workflow_dispatch event
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  schedule:
    - cron: '0 0 3 * *'

jobs:
  create_release:
    runs-on: 'ubuntu-latest'
    env:
      NONINTERACTIVE: 1
      FORCE_ACQUIRE_RELEASE: 1
      FORCE_DELETE_DB_BEFORE_IMPORT: 1
      POSTGRES_DATABASE: "ecco"
      POSTGRES_USER: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "db"
      MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

    steps:
    - uses: 'actions/checkout@v4'

    - name: Set up Docker Compose
      uses: docker/setup-compose-action@v1

    - name: Create random postgres db password
      run: |-
          # since we just need a shared pg secret, we'll randomly generate
          # one here
          LC_ALL=C echo "POSTGRES_PASSWORD=$( tr -dc '[a-zA-Z0-9]' < /dev/urandom | head -c 13; echo )" >> $GITHUB_ENV

          # write it all out to .env
          cat <<EOF
          POSTGRES_DATABASE="${POSTGRES_DATABASE}"
          POSTGRES_USER="${POSTGRES_USER}"
          POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
          POSTGRES_PORT="${POSTGRES_PORT}"
          POSTGRES_HOST="${POSTGRES_HOST}"
          MAPS_API_KEY="${{ secrets.MAPS_API_KEY }}"
          EOF > .env
          
    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
  
    - name: Produce release
      run: |-
          cd ./data/pipeline
          ./produce_release.sh


    - name: Copy dump to releases
      run: |-
          # list the /db-exports folder and sort
          # by date, taking the most recent file
          cp $( ls -t /db-exports/ | head -n 1 ) /tmp/release/

    - name: Create release
      run: |-
          gh release create $( date +%Y-%m-%d ) /tmp/release/
